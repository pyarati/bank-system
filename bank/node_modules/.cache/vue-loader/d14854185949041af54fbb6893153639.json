{"remainingRequest":"/home/arati/workspace/Vue/rout/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/arati/workspace/Vue/rout/src/components/profile.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/arati/workspace/Vue/rout/src/components/profile.vue","mtime":1632316383404},{"path":"/home/arati/workspace/Vue/rout/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/arati/workspace/Vue/rout/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/arati/workspace/Vue/rout/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/arati/workspace/Vue/rout/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/arati/workspace/Vue/rout/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5wcm9maWxlIGJ1dHRvbnsKICBtYXJnaW4tcmlnaHQ6IDVweDsKfQoucHJvZmlsZSAuZm9ybS1ncm91cCBsYWJlbHsKICBwYWRkaW5nLXJpZ2h0OiAyMThweDsKfQo="},{"version":3,"sources":["profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0MA;AACA;AACA;AACA;AACA;AACA","file":"profile.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <headers />\n    <div class=\"profile\" v-if=\"item\">\n      <h1>Profile</h1>\n\n      <form>\n        <div class=\"form-group\">\n          <label>First name<span class=\"text-danger\">*</span></label> \n          <input type=\"text\" v-model.trim=\"$v.item.first_name.$model\" placeholder=\"Enter first name\" :class=\"{'is-invalid': validationStatus($v.item.first_name)}\" class=\"form-control\" />\n          <div style=\"margin-left: -60px;margin-top: -25px;margin-bottom: 10px;}\" v-if=\"!$v.item.first_name.required\" class=\"invalid-feedback\">First name feild is required.</div>\n          <div style=\"margin-left: -69px;margin-top: -25px;margin-bottom: 10px;}\" v-if=\"!$v.item.first_name.minLength\" class=\"invalid-feedback\">You must have at least {{$v.item.first_name.$params.minLength.min}}.</div>\n        </div>\n\n        <div class=\"form-group\">\n          <label>Last name<span class=\"text-danger\">*</span></label> \n          <input type=\"text\" v-model.trim=\"$v.item.last_name.$model\" placeholder=\"Enter last name\" :class=\"{'is-invalid': validationStatus($v.item.last_name)}\" class=\"form-control\"/>\n          <div style=\"margin-left: -60px;margin-top: -25px;margin-bottom: 10px;}\" v-if=\"!$v.item.last_name.required\" class=\"invalid-feedback\">Last name feild is required.</div>\n        <div style=\"margin-left: -69px;margin-top: -25px;margin-bottom: 10px;}\" v-if=\"!$v.item.last_name.minLength\" class=\"invalid-feedback\">You must have at least {{$v.item.last_name.$params.minLength.min}}.</div>\n        </div>\n        \n        <div class=\"form-group\">\n          <label style=\"margin-left: -11px;\">Address<span class=\"text-danger\">*</span></label> \n          <input type=\"text\" v-model.trim=\"$v.item.address.$model\" placeholder=\"Enter address\" :class=\"{'is-invalid': validationStatus($v.item.address)}\" class=\"form-control\"/>\n          <div style=\"margin-left: -67px;margin-top: -25px;margin-bottom: 10px;}\" v-if=\"!$v.item.address.required\" class=\"invalid-feedback\">Address feild is required.</div>\n        <div style=\"margin-left: -69px;margin-top: -25px;margin-bottom: 10px;}\" v-if=\"!$v.item.address.minLength\" class=\"invalid-feedback\">You must have at least {{$v.item.address.$params.minLength.min}}.</div>\n        </div>\n        \n        <div class=\"form-group\">\n          <label style=\"margin-left: 36px;\">Mobile number<span class=\"text-danger\">*</span></label> \n          <input type=\"text\" v-model.trim=\"$v.item.mobile_number.$model\" placeholder=\"Enter mobile number\"  :class=\"{'is-invalid': validationStatus($v.item.mobile_number)}\" class=\"form-control\"/>\n          <div style=\"margin-left: -50px;margin-top: -25px;margin-bottom: 10px;}\" v-if=\"!$v.item.mobile_number.required\" class=\"invalid-feedback\">Mobile number feild is required.</div>\n          <div style=\"margin-left: -32px;margin-top: -25px;margin-bottom: 10px;}\" v-if=\"!$v.item.mobile_number.numeric\" class=\"invalid-feedback\">Mobile number feild must be numeric.</div>\n          <div style=\"margin-left: -66px;margin-top: -25px;margin-bottom: 10px;}\" v-if=\"!$v.item.mobile_number.minLength\" class=\"invalid-feedback\">You must have at least {{$v.item.mobile_number.$params.minLength.min}}.</div>\n          <div style=\"margin-left: -39px;margin-top: -25px;margin-bottom: 10px;}\" v-if=\"!$v.item.mobile_number.maxLength\" class=\"invalid-feedback\">You must have not greater than {{$v.item.mobile_number.$params.maxLength.max}}.</div>\n        </div>\n        \n        <div class=\"form-group\">\n          <label style=\"margin-left: -12px;\">Email id<span class=\"text-danger\">*</span></label> \n          <input type=\"email\" v-model.trim=\"$v.item.email_id.$model\" placeholder=\"Enter email address\" :class=\"{'is-invalid': validationStatus($v.item.email_id)}\" class=\"form-control\"/>\n          <div style=\"margin-left: -68px;margin-top: -25px;margin-bottom: 10px;}\" v-if=\"!$v.item.email_id.required\" class=\"invalid-feedback\">Email_id feild is required.</div>\n          <div style=\"margin-left: -90px;margin-top: -25px;margin-bottom: 10px;}\" v-if=\"!$v.item.email_id.email\" class=\"invalid-feedback\">Email is not valid.</div>\n        </div>\n\n        <!-- <router-link :to=\"'/updatelist/'+item.id\"><button type=\"submit\">Editprofile</button></router-link> -->\n        <div class=\"form-group\">\n          <button type=\"button\" class=\"btn btn-primary\" v-on:click=\"back()\">Back</button>\n          <button type=\"button\" class=\"btn btn-success\" v-on:click=\"updateuser()\">Update user</button>\n          <button type=\"button\" class=\"btn btn-danger\"  v-on:click=\"deleteuser()\">Delete user</button>\n        </div>\n      </form>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { required, email, minLength, maxLength, numeric } from 'vuelidate/lib/validators'\nimport _ from \"lodash\";\nimport headers from \"./headers.vue\";\n\nexport default {\n  name: \"home\",\n  components: {\n    headers,\n  },\n  data() {\n    return {\n      name: \"\",\n      item: {},\n    };\n  },\n  validations(){\n    return {\n      item: {\n        first_name: {required, minLength: minLength(4)},\n        last_name: {required, minLength: minLength(4)},\n        address: {required, minLength: minLength(3)},\n        mobile_number: {required, numeric, minLength: minLength(10), maxLength: maxLength(10)},\n        email_id: {required, email},\n      }\n    }\n  },\n  methods: {\n    validationStatus(validation){\n      return typeof validation != \"undefined\" ? validation.$error : false;\n    },\n    back() {\n      this.$router.push({ name: \"home\" });\n    },\n    updateuser() {\n      var access_token = localStorage.getItem(\"access_token\");\n      //console.log(access_token);\n      const options = {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          Authorization: access_token,\n        },\n      };\n      var data = {};\n      if (this.item.first_name != this.itemCopy.first_name) {\n        data[\"first_name\"] = this.item.first_name;\n      }\n      if (this.item.last_name != this.itemCopy.last_name) {\n        data[\"last_name\"] = this.item.last_name;\n      }\n      if (this.item.address != this.itemCopy.address) {\n        data[\"address\"] = this.item.address;\n      }\n      if (this.item.email_id != this.itemCopy.email_id) {\n        data[\"email_id\"] = this.item.email_id;\n      }\n      if (this.item.mobile_number != this.itemCopy.mobile_number) {\n        data[\"mobile_number\"] = this.item.mobile_number;\n      }\n      if (Object.keys(data).length) {\n        axios\n          .put(\"http://0.0.0.0:5000/user/\" + this.item.id, data, options)\n          .then((result) => {\n            this.$v.$touch();\n            if (this.$v.$pendding || this.$v.$error) return;\n\n            this.$alert(\"Successfully Updated data\", \"Success\", \"success\")\n            .then(() => console.log(\"Closed\"));\n            console.log(\"result:\", result);\n            //let data = result.data.data;\n            this.back();\n          })\n          .catch((e) => {\n            this.$alert(\"Invalid input data\", \"Error\", \"error\")\n            .then(() => console.log(\"Closed\"));\n            console.log(\"error:\", e);\n          });\n      }\n      else{\n        this.$alert(\"Nothing to update\", \"Warning\", \"warning\")\n      }\n    },\n    deleteuser() {\n      var access_token = localStorage.getItem(\"access_token\");\n      //console.log(access_token);\n      const options = {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          Authorization: access_token,\n        },\n      };\n      this.$confirm({\n        title: 'Confirm',\n        message: 'Are you sure you want to delete user?',\n        button: {\n          yes: 'confirm',\n          no: 'cancel'\n        },\n        callback: confirm => \n        {\n          if(confirm)\n          {\n            axios.delete(\"http://0.0.0.0:5000/user/\" + this.item.id, options)\n            .then((result) => {\n              console.log(\"result:\", result);\n              localStorage.clear();\n              this.$router.push({ name: \"signup\" });\n            })\n            .catch((e) => {\n              console.log(e);\n            });\n          }    \n        }\n      })\n    },\n  },\n  async mounted() {\n    let user = localStorage.getItem(\"id\");\n    if (!user) {\n      this.$router.push({ name: \"signup\" });\n    }\n    var access_token = localStorage.getItem(\"access_token\");\n    //console.log(access_token);\n    const options = {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        Authorization: access_token,\n      },\n    };\n    let url = \"http://0.0.0.0:5000/user/\" + user;\n\n    axios\n      .get(url, options)\n      .then((result) => {\n        this.item = result.data.data;\n        this.itemCopy = _.cloneDeep(this.item);\n      })\n      .catch((err) => {\n        console.log(\"AXIOS ERROR: \", err);\n      });\n  },\n};\n</script>\n\n<style>\n.profile button{\n  margin-right: 5px;\n}\n.profile .form-group label{\n  padding-right: 218px;\n}\n</style>"]}]}