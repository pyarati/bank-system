{"remainingRequest":"/home/arati/workspace/Vue/rout/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/arati/workspace/Vue/rout/src/components/login.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/arati/workspace/Vue/rout/src/components/login.vue","mtime":1632164323681},{"path":"/home/arati/workspace/Vue/rout/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/arati/workspace/Vue/rout/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/arati/workspace/Vue/rout/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/arati/workspace/Vue/rout/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/arati/workspace/Vue/rout/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubG9naW4gLmZvcm0tZ3JvdXAgbGFiZWx7CiAgcGFkZGluZy1yaWdodDogMjE4cHg7Cn0KLmgxLCBoMSB7CiAgICBmb250LXNpemU6IDIuNXJlbTsKICAgIG1hcmdpbi10b3A6IDIzcHg7CiAgICBtYXJnaW4tYm90dG9tOiAyMHB4Owp9Cg=="},{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"login.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"login\">\n    <img src=\"../assets/opcito.png\">\n    <h1>Log In</h1>\n    <form>\n\n    <div class=\"form-group\">\n      <label>Email id<span class=\"text-danger\">*</span></label> \n      <input type=\"email\" v-model.trim=\"$v.email_id.$model\" placeholder=\"Enter email address\" :class=\"{'is-invalid': validationStatus($v.email_id)}\" class=\"form-control\" />\n      <div v-if=\"!$v.email_id.required\" class=\"invalid-feedback\">Email_id feild is required.</div>\n      <div v-if=\"!$v.email_id.email\" class=\"invalid-feedback\">Email_id is not valid.</div>\n    </div>\n\n    <div class=\"form-group\">\n      <label>Password<span class=\"text-danger\">*</span></label>\n      <input type=\"password\" v-model.trim=\"$v.password.$model\" placeholder=\"Enter password\" :class=\"{'is-invalid': validationStatus($v.password)}\" class=\"form-control\"/>\n      <div v-if=\"!$v.password.required\" class=\"invalid-feedback\">Password feild is required.</div>\n    </div>\n    \n    <div class=\"form-group\">\n      <button type=\"submit\" class=\"btn btn-outline-success\" v-on:click=\"login()\">Login</button>\n      <button type=\"button\" class=\"btn btn-link\"><router-link to='/signup'>Signup</router-link></button>\n    </div>\n\n    </form>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport {required, email} from 'vuelidate/lib/validators'\n\nexport default {\n  name: \"login\",\n  data() {\n    return {\n      email_id: \"\",\n      password: \"\",\n    };\n  },\n  validations(){\n    return {\n      email_id: {required, email},\n      password: {required},\n    };\n  },\n  methods:{\n    validationStatus(validation){\n      return typeof validation != \"undefined\" ? validation.$error : false;\n    },\n    login(){\n      const options = {\n        headers: { \"Access-Control-Allow-Origin\": \"*\" },\n      };\n      axios.post('http://0.0.0.0:5000/login', {\n        email_id: this.email_id,\n        password: this.password,\n      },\n      options\n      )\n      .then((result) => {\n        this.$v.$touch();\n        if (this.$v.$pendding || this.$v.$error) return;\n\n        console.log(\"result:\", result);\n        let data = result.data.data;\n        console.log(data)\n        localStorage.setItem(\"id\", data.id)\n        localStorage.setItem(\"name\", data.first_name)\n        localStorage.setItem(\"access_token\",'Bearer '+data.access_token);\n        alert(\"Successfully Loggedin\");\n        this.$router.push({name:\"home\"});\n      })\n      .catch((e) => {\n        alert(\"Invalid input data\")\n        console.log('error:', e);\n      });\n    }\n  },\n  mounted(){\n    let user = localStorage.getItem(\"id\");\n    if (user) {\n      this.$router.push({name:'home'})\n    }\n  }\n};\n</script>\n\n<style>\n.login .form-group label{\n  padding-right: 218px;\n}\n.h1, h1 {\n    font-size: 2.5rem;\n    margin-top: 23px;\n    margin-bottom: 20px;\n}\n</style>"]}]}